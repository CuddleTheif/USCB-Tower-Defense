#BlueJ class context
comment0.params=cls
comment0.target=java.util.List\ getIntersectingObjects(java.lang.Class)
comment0.text=\r\n\ Return\ all\ the\ objects\ that\ intersect\ this\ object.\ This\ takes\ the\ graphical\ extent\ of\ objects\ into\ consideration.\ \r\n\ \r\n\ @param\ cls\ \ \ Class\ of\ objects\ to\ look\ for\ (passing\ 'null'\ will\ find\ all\ objects).\r\n\ @return\ \ \ \ \ \ all\ the\ objects\ that\ intersect\ this\ object\r\n
comment1.params=radius\ cls
comment1.target=java.util.List\ getObjectsInRange(int,\ java.lang.Class)
comment1.text=\r\n\ Return\ all\ objects\ within\ range\ 'radius'\ around\ this\ object.\ An\ object\ is\ within\ \r\n\ range\ if\ the\ distance\ between\ its\ edge\ and\ this\ object's\ center\ is\ less\ than\ or\ \r\n\ equal\ to\ 'radius'.\r\n\ \r\n\ @param\ radius\ \ \ Radius\ of\ the\ circle\ (in\ cells)\r\n\ @param\ cls\ \ \ \ \ \ Class\ of\ objects\ to\ look\ for\ (passing\ 'null'\ will\ find\ all\ objects)\r\n\ @return\ \ \ \ \ \ \ \ \ all\ objects\ within\ range\ 'radius'\ around\ this\ object\r\n
comment2.params=cls
comment2.target=greenfoot.Actor\ getClosestActor(java.lang.Class)
comment2.text=\r\n\ Gets\ the\ closest\ actor\ of\ a\ given\ class\ to\ this\ actor\r\n\ \r\n\ @param\ cls\ \ \ The\ class\ of\ the\ actors\ to\ look\ for\r\n
comment3.params=
comment3.target=java.awt.Point[]\ getVertexes()
comment3.text=\r\n\ Get\ this\ actors'\ vertexes\ of\ it's\ image\r\n\ \r\n\ @return\ \ \ THe\ vertexes\ of\ this\ actors'\ image\r\n
comment4.params=other
comment4.target=boolean\ intersects(Actors)
comment4.text=\r\n\ Checks\ if\ this\ actor\ intersects\ the\ given\ object\r\n\ \r\n\ @param\ other\ \ \ The\ actor\ to\ check\ for\ intersection\r\n\ @return\ \ \ \ \ \ \ \ If\ the\ actors\ intersect\ each\ other\ or\ not\r\n
comment5.params=
comment5.target=void\ act()
comment5.text=\r\n\ Act\ -\ do\ whatever\ the\ Actors\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
numComments=6
